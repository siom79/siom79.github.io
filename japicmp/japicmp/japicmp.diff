Comparing source compatibility of /home/mmois/Programmierung/japicmp/target/checkout/japicmp/target/japicmp-0.13.0.jar against /home/mmois/.m2/repository/com/github/siom79/japicmp/japicmp/0.12.0/japicmp-0.12.0.jar
***! MODIFIED CLASS: PUBLIC STATIC japicmp.cmp.JarArchiveComparatorOptions$OverrideCompatibilityChange  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	---! REMOVED CONSTRUCTOR: PUBLIC(-) JarArchiveComparatorOptions$OverrideCompatibilityChange(japicmp.model.JApiCompatibilityChange, boolean, boolean)
	+++  NEW CONSTRUCTOR: PUBLIC(+) JarArchiveComparatorOptions$OverrideCompatibilityChange(japicmp.model.JApiCompatibilityChange, boolean, boolean, japicmp.model.JApiSemanticVersionLevel)
	+++  NEW METHOD: PUBLIC(+) japicmp.model.JApiSemanticVersionLevel getSemanticVersionLevel()
***  MODIFIED CLASS: PUBLIC japicmp.config.Options  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) boolean isErrorOnBinaryIncompatibility()
	+++  NEW METHOD: PUBLIC(+) boolean isErrorOnExclusionIncompatibility()
	+++  NEW METHOD: PUBLIC(+) boolean isErrorOnModifications()
	+++  NEW METHOD: PUBLIC(+) boolean isErrorOnSemanticIncompatibility()
	+++  NEW METHOD: PUBLIC(+) boolean isErrorOnSourceIncompatibility()
	+++  NEW METHOD: PUBLIC(+) boolean isIgnoreMissingNewVersion()
	+++  NEW METHOD: PUBLIC(+) boolean isIgnoreMissingOldVersion()
	+++  NEW METHOD: PUBLIC(+) void setErrorOnBinaryIncompatibility(boolean)
	+++  NEW METHOD: PUBLIC(+) void setErrorOnExclusionIncompatibility(boolean)
	+++  NEW METHOD: PUBLIC(+) void setErrorOnModifications(boolean)
	+++  NEW METHOD: PUBLIC(+) void setErrorOnSemanticIncompatibility(boolean)
	+++  NEW METHOD: PUBLIC(+) void setErrorOnSourceIncompatibility(boolean)
	+++  NEW METHOD: PUBLIC(+) void setIgnoreMissingNewVersion(boolean)
	+++  NEW METHOD: PUBLIC(+) void setIgnoreMissingOldVersion(boolean)
***  MODIFIED ENUM: PUBLIC STATIC FINAL japicmp.exception.JApiCmpException$Reason  (compatible)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) japicmp.exception.JApiCmpException$Reason IncompatibleChange
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiAnnotation  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiAnnotationElement  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiClass  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiClassFileFormatVersion  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
***  MODIFIED ENUM: PUBLIC FINAL japicmp.model.JApiCompatibilityChange  (compatible)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) japicmp.model.JApiCompatibilityChange CLASS_LESS_ACCESSIBLE
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) japicmp.model.JApiCompatibilityChange ANNOTATION_DEPRECATED_ADDED
	+++  NEW METHOD: PUBLIC(+) japicmp.model.JApiSemanticVersionLevel getSemanticVersionLevel()
	+++  NEW METHOD: PUBLIC(+) void setSemanticVersionLevel(japicmp.model.JApiSemanticVersionLevel)
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiConstructor  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiField  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiImplementedInterface  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiMethod  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
	+++  NEW METHOD: PUBLIC(+) STATIC(+) java.lang.String toString(japicmp.util.Optional)
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiReturnType  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
+++  NEW ENUM: PUBLIC(+) FINAL(+) japicmp.model.JApiSemanticVersionLevel  (compatible)
	+++  CLASS FILE FORMAT VERSION: 51.0 <- n.a.
	+++  NEW INTERFACE: java.lang.Comparable
	+++  NEW INTERFACE: java.io.Serializable
	+++  NEW SUPERCLASS: java.lang.Enum
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) japicmp.model.JApiSemanticVersionLevel MAJOR
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) japicmp.model.JApiSemanticVersionLevel MINOR
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) japicmp.model.JApiSemanticVersionLevel PATCH
	+++  NEW METHOD: PUBLIC(+) int getLevel()
	+++  NEW METHOD: PUBLIC(+) STATIC(+) japicmp.model.JApiSemanticVersionLevel valueOf(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) STATIC(+) japicmp.model.JApiSemanticVersionLevel[] values()
***  MODIFIED CLASS: PUBLIC japicmp.model.JApiSuperclass  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW METHOD: PUBLIC(+) java.lang.String toString()
+++  NEW CLASS: PUBLIC(+) japicmp.output.incompatible.IncompatibleErrorOutput  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 51.0 <- n.a.
	+++  NEW SUPERCLASS: japicmp.output.OutputGenerator
	+++  NEW CONSTRUCTOR: PUBLIC(+) IncompatibleErrorOutput(japicmp.config.Options, java.util.List, japicmp.cmp.JarArchiveComparator)
	+++  NEW METHOD: PROTECTED(+) void debug(java.lang.String)
	+++  NEW METHOD: PUBLIC(+) java.lang.Void generate()
	+++  NEW METHOD: PROTECTED(+) void info(java.lang.String)
	+++  NEW METHOD: PROTECTED(+) boolean isDebugEnabled()
	+++  NEW METHOD: PROTECTED(+) void warn(java.lang.String, java.lang.Throwable)
	+++  NEW METHOD: PROTECTED(+) void warn(java.lang.String)
***  MODIFIED CLASS: PUBLIC japicmp.output.semver.SemverOut  (not serializable)
	===  CLASS FILE FORMAT VERSION: 51.0 <- 51.0
	+++  NEW CONSTRUCTOR: PUBLIC(+) SemverOut(japicmp.config.Options, java.util.List, japicmp.output.semver.SemverOut$Listener)
+++  NEW INTERFACE: PUBLIC(+) ABSTRACT(+) STATIC(+) japicmp.output.semver.SemverOut$Listener  (not serializable)
	+++  CLASS FILE FORMAT VERSION: 51.0 <- n.a.
	+++  NEW SUPERCLASS: java.lang.Object
	+++  NEW FIELD: PUBLIC(+) STATIC(+) FINAL(+) japicmp.output.semver.SemverOut$Listener NULL
	+++  NEW METHOD: PUBLIC(+) ABSTRACT(+) void onChange(japicmp.model.JApiCompatibility, japicmp.model.JApiSemanticVersionLevel)
